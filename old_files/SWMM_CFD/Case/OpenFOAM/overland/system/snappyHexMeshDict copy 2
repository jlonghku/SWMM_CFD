/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#includeEtc "caseDicts/mesh/generation/snappyHexMeshDict.cfg"

castellatedMesh on;
snap            on;
addLayers       on;

geometry
{
   walls
    {
        type triSurfaceMesh;
        file "walls.stl";
    }
   
    box1
    {
        type            searchableBox;
        min             (515 865 6.6);
        max             (525 875 7);
    }
    inlet1
    {
      type            searchableDisk;
      origin          (520 870 6.6);
      normal          (0 0 1);
       radius 1;
    }
    box2
    {
        type            searchableBox;
        min             (945 850 2.4);
        max             (955 860 3);
    }
    inlet2
    {
      type            searchableDisk;
      origin          (950 855 2.4);
      normal          (0 0 1);
       radius 1;
    }
    box3
    {
        type            searchableBox;
        min             (1325 485 9);
        max             (1335 495 9.5);
    }
    inlet3
    {
      type            searchableDisk;
      origin          (1330 490 9);
      normal          (0 0 1);
       radius 1;
    }
 
  
};

castellatedMeshControls
{
    features
    (
        {
           file "walls.eMesh";
           level 1;
        }
   
    );

    refinementSurfaces
    {
       
        "inlet.*"
        {
            level (1 2);
            patchInfo
              {
                  type patch;
              }
        }
        walls
        {
            level (1 2);
            patchInfo
                {
                    type wall;
                }
        }
    }

    refinementRegions
    { 
        "box.*"
        {
        
            mode inside;
            
            levels ((2 4));       
        }
      
    }
    locationInMesh (1110 865 8);
}

snapControls
{
    // Number of patch smoothing iterations before finding correspondence
    // to surface
    nSmoothPatch 2;

    // Maximum relative distance for points to be attracted by surface.
    // True distance is this factor times local maximum edge length.
    // Note: changed(corrected) w.r.t 17x! (17x used 2* tolerance)
    tolerance 3.0;

    // Number of mesh displacement relaxation iterations.
    nSolveIter 30;

    // Maximum number of snapping relaxation iterations. Should stop
    // before upon reaching a correct mesh.
    nRelaxIter 5;

    // Feature snapping

        // Number of feature edge snapping iterations.
        // Leave out altogether to disable.
        nFeatureSnapIter 15;

        // Detect (geometric only) features by sampling the surface
        // (default=false).
        implicitFeatureSnap false;

        // Use castellatedMeshControls::features (default = true)
        explicitFeatureSnap true;

        // Detect features between multiple surfaces
        // (only for explicitFeatureSnap, default = false)
        multiRegionFeatureSnap false;
}

addLayersControls
{
    layers
    {
        walls
        {
            nSurfaceLayers 2;
        }
    }

    relativeSizes       true;
    expansionRatio      1.2;
    finalLayerThickness 0.5;
    minThickness        1e-3;
}

writeFlags
(
);

mergeTolerance 1e-6;

// ************************************************************************* //
